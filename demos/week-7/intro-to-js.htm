<!DOCTYPE html>
<html lang="en">

    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Intro to Javascript</title>
        <link rel="stylesheet" type="text/css" href="week7.css">
    </head>

    <body>
        <main>
            <h1>In-class Exercise: Intro to Javascript</h1>
            <p>Let’s learn Javascript basics! Save this file on your class portal website.</p>
            <h2>Browser Setup</h2>
            <ol>
                <li>Open Developer Tools and click "Console".<br>
                    <small>The Console is a testing ground for Javascript, just like the Elements tab is a testing ground for CSS.</small>
                </li>
                <li>Let’s ask the Console to do math for us using Javascript operators. Type in <code>2 + 2</code> and hit return.<br>
                    <small>Careful—if you refresh the window, your console log will be lost.</small>
                </li>
                <li>Next, let’s ask the Console to evaluate truthfulness. Type in <code>2 === 2</code> and hit return.</li>
                <li>Type in <code>1 > 2</code> and hit return.<br>
                    <small>More info on Javascript operators <a href="https://www.w3schools.com/js/js_operators.asp" target="_blank">here</a></small>
                </li>
            </ol>
            <h2>Selecting Elements</h2>
            <ol start="5">
                <li>In the console, type <code>document.querySelector("h2")</code> You should see one element.
                    <br>
                    <small>You can use any CSS selector like element, class, or ID. You can even use nesting like "div ul li .classname" More info <a href="https://www.w3schools.com/jsref/met_document_queryselectorall.asp" target="_blank">here</a></small>
                </li>
                <li>To select all, type in <code>document.querySelectorAll("h2")</code> You should see a "nodelist" containing multiple elements.<br>
                    <small>Use querySelector to grab the first element, and querySelectorAll to grab all elements. More info <a href="https://www.w3schools.com/jsref/met_document_queryselector.asp" target="_blank">here</a></small>
                </li>
            </ol>
            <h2>Writing Scripts</h2>
            <p>Now we’re moving over to VSCode. Open up this HTML document in your code editor.</p>
            <ol start="7">
                <li>Locate the closing <code>&lt;/body&gt;</code> tag. Paste this code just above it:<br>
                    <pre><code>
&lt;script type="text/javascript"&gt;
    let name = "Megumi";
    console.log(name);
&lt;/script&gt;
                    </code></pre>
                </li>
                <li>Replace my name with your name. Save the code and refresh your browser. Look in the console!<br>
                    <small>The console is displaying the value of variable "name" in the log</small>
                </li>
                <li>Next, add these lines inside your script tag. Make sure each line ends in a semicolon.<br>
                    <pre><code>
let firstHeading = document.querySelector("h1");
console.log(firstHeading);
                                            </code></pre>
                </li>
                <li>Save your code and refresh your browser window. You'll see the <code>&lt;h1&gt;</code> element in the console.<br>
                    <small>This is a common way to troubleshoot your Javascript. Make sure each variable is logged in the console so you can make sure it has a value.</small>
                </li>
                <li>Let’s change the CSS property "color" for this element. Create a new line and add <code>firstHeading.style.color = "#36612e"</code> Scroll up to see the change.<br>
                    <small>You can see the new inline CSS by going back to the "Elements" view in your Inspector. You can also edit any CSS property in place of "color".</small>
                </li>
                <li>You can also add CSS classes with Javascript. Create a new line and add <code>firstHeading.classList.add("underline");</code> I've already styled this in the CSS. Scroll up to see the new underline style.<br>
                    <small>Learn to remove a class <a href="https://www.w3schools.com/howto/howto_js_remove_class.asp" target="_blank">here</a>. If you don't like the underline style, edit the CSS class ".underline"</small>
                </li>
                <li>Finally, Javascript can change the HTML content. Create a new line and add <code>firstHeading.textContent = name + "’s Javascript Worksheet";</code> This code combines our earlier variable "name" with a text string.<br><small>The spaces, quotes, and <code>+</code> operator are important to put this together! This technique is called <a href="https://masteringjs.io/tutorials/fundamentals/string-concat" target="_blank">string concatenation</a>.</small></li>
            </ol>
            <h2>Mouse Clicks</h2>
            <p>Make sure your Console is open. For these questions, we'll be working with this button element:</p>
            <button>Button</button>
            <ol start="14">
                <li>In VSCode, add the following to your script:<br>
                    <pre><code>
let button = document.querySelector("button");
button.addEventListener("click", function() {
  console.log("Button clicked!");
});
                </code></pre>
                    <small>This script selects the "button" element. Next, it adds an event listener that watches for any "click" to the button. When the button is clicked, everything inside the curly brackets is executed. Other events you can listen for are listed <a href="https://www.w3schools.com/jsref/dom_obj_event.asp" target="_blank">here</a>.</small><br>
                    <small>Note that console log has quote marks here because this is a text string, not a variable. Variables don't need quotes.</small>
                </li>
                <li>Click the button repeatedly. In the console, notice how the count of clicks increases.</li>
                <li>There is a hidden message in this question. To show it when you click the button, add the following to your script, <b>inside the function curly brackets</b>:<br>
                    <pre><code>
let hiddenMessage = document.querySelector(" .hidden"); hiddenMessage.classList.add("show"); </code></pre>
                    <small>This code goes inside the curly brackets with the click event listener. Now you're adding a CSS class when you click the button.</small><br>
                    <p>Now click the button above.</p>
                    <div class="hidden">Congratulations! You found the message!</div>
                    <small>Optional: to make the button show/hide this text every time you click, you can change the script to use <a href="https://www.w3schools.com/howto/howto_js_toggle_class.asp" target="_blank">toggle</a> instead.</small>
                </li>
            </ol>
            <h2>Adding Libraries</h2>
            <p>So far, we've been writing vanilla Javascript. Now, let's add an external library that acts like an expansion pack.</p>
            <ol start="17">
                <li>Open the demo site for <a href="https://tholman.com/cursor-effects/" target=" _blank">90s Cursor Effects</a>. Click to open the <a href="https://github.com/tholman/cursor-effects" target="_blank">Github repo</a> for installation instructions.</li>
                <li>On Github, under "How to Use" heading, there is a script to copy. Paste that in this file <b>above the scripts we've been writing</b></li>
            </ol>
            <h2>All done!</h2>
            <p>Compare your answers to the answer key to make sure you understand everything!</p>
            <p>For additional work with external libraries, I suggest adding Google Analytics to your class portal website.</p>
        </main>
        <script src="https://unpkg.com/cursor-effects@latest/dist/browser.js"></script>
        <script type="text/javascript">
            let name = "Megumi";
            console.log(name);
            let firstHeading = document.querySelector("h1");
            console.log(firstHeading);
            firstHeading.style.color = "#36612e";
            firstHeading.classList.add("underline");
            firstHeading.textContent = name + "’s Javascript Worksheet";
            let button = document.querySelector("button");
            button.addEventListener("click", function () {
                console.log("Button clicked!");
                let hiddenMessage = document.querySelector(".hidden");
                hiddenMessage.classList.add("show");
            });
            window.addEventListener("load", (event) => {
                new cursoreffects.ghostCursor();
            });
        </script>
    </body>

</html>
